let express,Router,connectDatabase,check,validationResult,cors;_bcc‍.w("express",[["default",["express"],function(v){express=v}],["Router",["Router"],function(v){Router=v}]]);_bcc‍.w("./config/db",[["default",["connectDatabase"],function(v){connectDatabase=v}]]);_bcc‍.w("express-validator",[["check",["check"],function(v){check=v}],["validationResult",["validationResult"],function(v){validationResult=v}]]);_bcc‍.w("cors",[["default",["cors"],function(v){cors=v}]]);




const app = express();
connectDatabase();
app.use(express.json({extended: false}));
app.use(
    cors({
        origin: 'http://localhost:3000' 
    })
    );

app.get('/', (req,res)=>
res.send('http get request sent to root ap endpoint :)'));

app.post('/api/users', 

[
    check('name', 'Please enter your name').not().isEmpty(),
    check('email', 'Please enter a valid email').isEmail(),
    check('password','Please enter a password with 6 or more characters').isLength({min:6})
],


(req,res)=> {
   const errors = validationResult(req);
   if (!errors.isEmpty()){
       return res.status(422).json({errors:errors.array()});
   }else{
   return res.send(req.body);
}
});



const port = 5000;

app.listen(port, ()=> console.log(`Express server running on port ${port}`));


